# conda activate uwtools
# uw rocoto realize --config-file near_realtime_workflow.yaml --output-file near_realtime_workflow.xml
# /home/acr/git/rocoto/bin/rocotorun -d near_realtime_workflow.db -w near_realtime_workflow.xml
# /home/acr/git/rocoto/bin/rocotostat -d near_realtime_workflow.db -w near_realtime_workflow.xml
# or /home/acr/git/rocoto/bin/rocotoboot -d near_realtime_workflow.db -w near_realtime_workflow.xml -c all -t <TASK_TO_RUN>
workflow:
  attrs:
    realtime: true
    scheduler: slurm
  cycledef:
    - attrs:
        group: default
      spec: "0 0 1 */3 2025 *"
  log:
    cyclestr:
      value: /home/acr/git/seasonal-workflow/workflows/log_@Y-@m.log
  entities:
    ANALYSIS_INPUT: /work/acr/mom6/nwa12/analysis_input_data
    FORECAST_INPUT: /work/acr/mom6/nwa12/forecast_input_data
    GAEA_INPUT: gaea:/gpfs/f6/ira-cefi/scratch/Andrew.C.Ross/northwest_atlantic/nwa12_input
    ARCHIVE_INPUT: /archive/acr/mom6_input/forecasts
    CONFIG: /home/acr/git/seasonal-workflow/config_nwa12_cobalt.yaml
    ENV_SETUP: "source /home/acr/git/seasonal-workflow/workflows/env_setup.sh;"
    QC_SETUP: "source /home/acr/git/ncqc/.venv/bin/activate;"
    LOGS: /home/acr/git/seasonal-workflow/workflows/logs
  tasks:
    task_write_spear_atmos:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          value: "&ENV_SETUP; python write_spear_atmos.py -c &CONFIG; -y @Y -m @m"
      partition: batch
      nodes: 1:ppn=1
      walltime: 02:00:00
      native: -D /home/acr/git/seasonal-workflow/forecast_setup/ --output=&LOGS;/spear_atmos_%j.out
      dependency:
        sh:
          command:
            cyclestr:
              value: "test -d /archive/l1j/spear_med/rf_hist/fcst/s_j11_OTA_IceAtmRes_L33/i@Y@m01_OTA_IceAtmRes_L33/pp_ens_10"
          attrs: # attrs is supposed to be optional but uw tools will fail if it isn't there.
            shell: "/bin/csh"
    metatask_qc_spear_atmos_daily:
      var:
        variable: lwdn_sfc precip q_ref slp swdn_sfc t_ref
      attrs:
        mode: parallel
        throttle: 6
      task_qc_spear_#variable#:
        attrs:
          cycledefs: default
          maxtries: 2 # Sometimes failure is just failure to load python
        command:
          cyclestr:
            value: "&QC_SETUP; find &FORECAST_INPUT;/atmos/@Y-@m-e??/ -name \"*#variable#*\" -type f -print0 | xargs -0 -n 1 sh -c '/nbhome/acr/local/bin/uv run /home/acr/git/ncqc/ncqc.py  \"$1\" -c workflows/qc_atmos.yaml workflows/qc_daily.yaml --fail-on-error || exit 255' _"
            # This will wrongly succeed if find doesn't return any files.
        partition: batch
        nodes: 1:ppn=1
        walltime: 0:05:00
        native: -D /home/acr/git/seasonal-workflow  --output=&LOGS;/spear_qc_%j.out
        dependency:
          taskdep:
            attrs:
              task: write_spear_atmos
    metatask_qc_spear_atmos_4xdaily:
      var:
        variable: u_ref v_ref
      attrs:
        mode: parallel
        throttle: 2
      task_qc_spear_#variable#:
        attrs:
          cycledefs: default
          maxtries: 1
        command:
          cyclestr:
            value: "&QC_SETUP; find &FORECAST_INPUT;/atmos/@Y-@m-e??/ -name \"*#variable#*\" -type f -print0 | xargs -0 -n 1 sh -c '/nbhome/acr/local/bin/uv run /home/acr/git/ncqc/ncqc.py  \"$1\" -c workflows/qc_atmos.yaml --fail-on-error || exit 255' _"
        partition: batch
        nodes: 1:ppn=1
        walltime: 0:05:00
        native: -D /home/acr/git/seasonal-workflow  --output=&LOGS;/spear_qc_%j.out
        dependency:
          taskdep:
            attrs:
              task: write_spear_atmos
    task_spear_gaea:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          value: "&ENV_SETUP; gcp -cd -r -v &FORECAST_INPUT;/atmos/@Y-@m-e?? &GAEA_INPUT;/forecast_input_data/atmos/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 0:30:00
      native: --output=&LOGS;/spear_gaea_%j.out
      dependency:
        and:
          metataskdep_daily:
            attrs:
              metatask: qc_spear_atmos_daily
          metataskdep_4xdaily:
            attrs:
              metatask: qc_spear_atmos_4xdaily
    task_spear_archive:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          value: "&ENV_SETUP; gcp -cd -r -v &FORECAST_INPUT;/atmos/@Y-@m-e?? &ARCHIVE_INPUT;/@Y/@m/atmos/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 0:10:00
      native: --output=&LOGS;/spear_archive_%j.out
      dependency:
        and:
          metataskdep_daily:
            attrs:
              metatask: qc_spear_atmos_daily
          metataskdep_4xdaily:
            attrs:
              metatask: qc_spear_atmos_4xdaily
    task_write_boundary:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; python write_boundary_reanalysis.py -c &CONFIG; -y @Y -m @m --update"
      partition: analysis
      nodes: 1:ppn=4
      walltime: 04:00:00
      native: -D /home/acr/git/seasonal-workflow/analysis_setup/boundary --output=&LOGS;/write_boundary_%j.out
      dependency:
        and:
          sh_so:
            command:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: "test -d /archive/uda/CEFI/GLOBAL_ANALYSISFORECAST_PHY_001_024/cmems_mod_glo_phy-so_anfc_0.083deg_P1D-m_202406/@Y/@m"
            attrs:
              shell: "/bin/csh"
          sh_thetao:
            command:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: "test -d /archive/uda/CEFI/GLOBAL_ANALYSISFORECAST_PHY_001_024/cmems_mod_glo_phy-thetao_anfc_0.083deg_P1D-m_202406/@Y/@m"
            attrs:
              shell: "/bin/csh"
          sh_zos:
            command:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: "test -d /archive/uda/CEFI/GLOBAL_ANALYSISFORECAST_PHY_001_024/cmems_mod_glo_phy_anfc_0.083deg_P1D-m_202406/@Y/@m"
            attrs:
              shell: "/bin/csh"
          sh_currents:
            command:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: "test -d /archive/uda/CEFI/GLOBAL_ANALYSISFORECAST_PHY_001_024/cmems_mod_glo_phy-cur_anfc_0.083deg_P1D-m_202406/@Y/@m"
            attrs:
              shell: "/bin/csh"
    task_concat_boundary:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; python concat_boundary_reanalysis.py -c &CONFIG; -y @Y"
      partition: batch
      nodes: 1:ppn=1
      walltime: 00:30:00
      native: -D /home/acr/git/seasonal-workflow/analysis_setup/boundary --output=&LOGS;/concat_boundary_%j.out
      dependency:
        taskdep:
          attrs:
            task: write_boundary
    task_boundary_gaea:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; gcp -cd -v &ANALYSIS_INPUT;/boundary/*_???_@Y.nc &GAEA_INPUT;/analysis_input_data/boundary/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 0:30:00
      native: --output=&LOGS;/boundary_gaea_%j.out
      dependency:
        taskdep:
          attrs:
            task: concat_boundary
    task_boundary_archive:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; gcp -cd -v &ANALYSIS_INPUT;/boundary/*_???_@Y.nc &ARCHIVE_INPUT;/@Y/@m/boundary/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 0:10:00
      native: --output=&LOGS;/boundary_archive_%j.out
      dependency:
        taskdep:
          attrs:
            task: concat_boundary
    task_write_nudging_data:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; python write_nudging_data.py -c &CONFIG; -y @Y"
      partition: batch
      nodes: 1:ppn=1
      walltime: 00:30:00
      native: -D /home/acr/git/seasonal-workflow/analysis_setup/sponge --output=&LOGS;/nudging_data_%j.out
      dependency:
        taskdep:
          attrs:
            task: write_boundary
    task_nudging_gaea:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; gcp -cd -v &ANALYSIS_INPUT;/sponge/glorys_sponge_monthly_bnd_@Y.nc &GAEA_INPUT;/analysis_input_data/sponge/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 01:00:00
      native: --output=&LOGS;/nudging_gaea_%j.out
      dependency:
        taskdep:
          attrs:
            task: write_nudging_data
    task_nudging_archive:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; gcp -cd -v &ANALYSIS_INPUT;/sponge/glorys_sponge_monthly_bnd_@Y.nc &ARCHIVE_INPUT;/@Y/@m/sponge/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 01:00:00
      native: --output=&LOGS;/nudging_archive_%j.out
      dependency:
        taskdep:
          attrs:
            task: write_nudging_data
    task_write_runoff_glofas:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; python write_runoff_glofas.py -c &CONFIG; -y @Y --modify"
      partition: batch
      nodes: 1:ppn=1
      walltime: 01:00:00
      native: -D /home/acr/git/seasonal-workflow/analysis_setup/rivers --output=&LOGS;/runoff_glofas_%j.out
      dependency:
        datadep:
          value:
            cyclestr:
              attrs:
                offset: "-01:00:00:00"
              value: /archive/uda/CEFI/GloFAS/GloFAS_river_discharge_@Y_v4.0.nc
    task_runoff_gaea:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; gcp -cd -v &ANALYSIS_INPUT;/rivers/glofasv4_runoff_@Y.nc &GAEA_INPUT;/analysis_input_data/rivers/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 0:30:00
      native: --output=&LOGS;/runoff_gaea_%j.out
      dependency:
        taskdep:
          attrs:
            task: write_runoff_glofas
    task_runoff_archive:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; gcp -cd -v &ANALYSIS_INPUT;/rivers/glofasv4_runoff_@Y.nc &ARCHIVE_INPUT;/${now_year}/${now_month}/rivers/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 0:10:00
      native: --output=&LOGS;/runoff_archive_%j.out
      dependency:
        taskdep:
          attrs:
            task: write_runoff_glofas
    task_pad_era5:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; python pad_era5.py -c &CONFIG; -y @Y"
      partition: batch
      nodes: 1:ppn=1
      walltime: 01:00:00
      native: -D /home/acr/git/seasonal-workflow/analysis_setup/atmos --output=&LOGS;/pad_era5_%j.out
      dependency:
        and:
          datadep_d2m:
            value:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: /archive/uda/CEFI/ERA5/2m_dewpoint_temperature/ERA5_2m_dewpoint_temperature_@m@Y.nc
          datadep_msl:
            value:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: /archive/uda/CEFI/ERA5/mean_sea_level_pressure/ERA5_mean_sea_level_pressure_@m@Y.nc
          datadep_sf:
            value:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: /archive/uda/CEFI/ERA5/snowfall/ERA5_snowfall_@m@Y.nc
          datadep_sp:
            value:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: /archive/uda/CEFI/ERA5/surface_pressure/ERA5_surface_pressure_@m@Y.nc
          datadep_ssrd:
            value:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: /archive/uda/CEFI/ERA5/surface_solar_radiation_downwards/ERA5_surface_solar_radiation_downwards_@m@Y.nc
          datadep_strd:
            value:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: /archive/uda/CEFI/ERA5/surface_thermal_radiation_downwards/ERA5_surface_thermal_radiation_downwards_@m@Y.nc
          datadep_t2m:
            value:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: /archive/uda/CEFI/ERA5/2m_temperature/ERA5_2m_temperature_@m@Y.nc
          datadep_tp:
            value:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: /archive/uda/CEFI/ERA5/total_precipitation/ERA5_total_precipitation_@m@Y.nc
          datadep_u10:
            value:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: /archive/uda/CEFI/ERA5/10m_u_component_of_wind/ERA5_10m_u_component_of_wind_@m@Y.nc
          datadep_v10:
            value:
              cyclestr:
                attrs:
                  offset: "-01:00:00:00"
                value: /archive/uda/CEFI/ERA5/10m_v_component_of_wind/ERA5_10m_v_component_of_wind_@m@Y.nc
    task_era5_lp:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; python era5_lp.py -t &ANALYSIS_INPUT;/atmos/ERA5_tp_@Y_padded.nc -s &ANALYSIS_INPUT;/atmos/ERA5_sf_@Y_padded.nc -o &ANALYSIS_INPUT;/atmos/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 00:30:00
      native: -D /home/acr/git/seasonal-workflow/analysis_setup/atmos --output=&LOGS;/era5_lp_%j.out
      dependency:
        taskdep:
          attrs:
            task: pad_era5
    task_era5_sphum:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; python era5_sphum.py -d &ANALYSIS_INPUT;/atmos/ERA5_d2m_@Y_padded.nc -p &ANALYSIS_INPUT;/atmos/ERA5_sp_@Y_padded.nc"
      partition: batch
      nodes: 1:ppn=1
      walltime: 0:30:00
      native: -D /home/acr/git/seasonal-workflow/analysis_setup/atmos --output=&LOGS;/era5_sphum_%j.out
      dependency:
        taskdep:
          attrs:
            task: pad_era5
    metatask_qc_era5:
      var:
        variable: lp msl sf sphum ssrd strd t2m u10 v10
      attrs:
        mode: parallel
        throttle: 6
      task_qc_era5_#variable#:
        attrs:
          cycledefs: default
          maxtries: 2 # Sometimes failure is just failure to load python
        command:
          cyclestr:
            value: "&QC_SETUP; /nbhome/acr/local/bin/uv run /home/acr/git/ncqc/ncqc.py &ANALYSIS_INPUT;/atmos/ERA5_#variable#_@Y_padded.nc -c workflows/qc_atmos.yaml workflows/qc_hourly.yaml --fail-on-error"
        partition: batch
        nodes: 1:ppn=1
        walltime: 0:05:00
        native: -D /home/acr/git/seasonal-workflow  --output=&LOGS;/era5_qc_%j.out
        dependency:
          and:
            taskdep_pad:
              attrs:
                task: pad_era5
            taskdep_sphum:
              attrs:
                task: era5_sphum
            taskdep_lp:
              attrs:
                task: era5_lp
    task_era5_gaea:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; gcp -cd -v ERA5_strd_@Y_padded.nc ERA5_ssrd_@Y_padded.nc ERA5_lp_@Y_padded.nc ERA5_sf_@Y_padded.nc ERA5_msl_@Y_padded.nc ERA5_t2m_@Y_padded.nc ERA5_sphum_@Y_padded.nc ERA5_u10_@Y_padded.nc ERA5_v10_@Y_padded.nc &GAEA_INPUT;/analysis_input_data/atmos/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 2:00:00
      native: -D &ANALYSIS_INPUT;/atmos/ --output=&LOGS;/era5_gaea_%j.out
      dependency:
        and:
          taskdep_pad:
            attrs:
              task: pad_era5
          taskdep_sphum:
            attrs:
              task: era5_sphum
          taskdep_lp:
            attrs:
              task: era5_lp
          metataskdep_qc:
            attrs:
              metatask: qc_era5
    task_era5_archive:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          attrs:
            offset: "-01:00:00:00"
          value: "&ENV_SETUP; gcp -cd -v ERA5_strd_@Y_padded.nc ERA5_ssrd_@Y_padded.nc ERA5_lp_@Y_padded.nc ERA5_sf_@Y_padded.nc ERA5_msl_@Y_padded.nc ERA5_t2m_@Y_padded.nc ERA5_sphum_@Y_padded.nc ERA5_u10_@Y_padded.nc ERA5_v10_@Y_padded.nc &ARCHIVE_INPUT;/${now_year}/${now_month}/atmos/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 00:30:00
      native: -D &ANALYSIS_INPUT;/atmos/ --output=&LOGS;/era5_archive_%j.out
      dependency:
        and:
          taskdep_pad:
            attrs:
              task: pad_era5
          taskdep_sphum:
            attrs:
              task: era5_sphum
          taskdep_lp:
            attrs:
              task: era5_lp
          metataskdep_qc:
            attrs:
              metatask: qc_era5
    # After analysis simulation has run:
    task_write_ics:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          value: "&ENV_SETUP; python write_ics_from_snapshot.py -c &CONFIG; -y @Y -m @m --now --rerun"
      partition: analysis
      nodes: 1:ppn=1
      walltime: 02:00:00
      native: -D /home/acr/git/seasonal-workflow/forecast_setup/ --output=&LOGS;/ics_%j.out
      dependency:
        datadep:
          value:
            cyclestr:
              value: "/archive/acr/fre/NWA/2024_09/NWA12_COBALT_2024_09_i@Y@m/gfdl.ncrc6-intel23-prod/history/@Y0101.nc.tar"
    task_ics_gaea:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          value: "&ENV_SETUP; gcp -cd -v &FORECAST_INPUT;/initial/forecast_ics_@Y-@m.tar &GAEA_INPUT;/forecast_input_data/initial/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 03:00:00
      native: --output=&LOGS;/ics_gaea_%j.out
      dependency:
        taskdep:
          attrs:
            task: write_ics
    task_ics_archive:
      attrs:
        cycledefs: default
      command:
        cyclestr:
          value: "&ENV_SETUP; gcp -cd -v &FORECAST_INPUT;/initial/forecast_ics_@Y-@m.tar &ARCHIVE_INPUT;/@Y/@m/initial/"
      partition: batch
      nodes: 1:ppn=1
      walltime: 01:00:00
      native: --output=&LOGS;/ics_archive_%j.out
      dependency:
        taskdep:
          attrs:
            task: write_ics
